volatile uint16_t digital_value;

void setup() {
  // Initialize the Serial Monitor at 9600 baud rate
  Serial.begin(9600);

  // Set ADMUX to use AVcc as reference voltage and select ADC0 as input channel
  ADMUX |= (1 << REFS0);

  // Set ADCSRA to enable ADC, enable ADC interrupt, set prescaler to 128 (16 MHz / 128 = 125 kHz ADC clock)
  ADCSRA |= (1 << ADIE) | (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);

  // Enable global interrupts
  sei();

  // Start ADC conversion
  ADCSRA |= (1 << ADSC);
}

// ADC conversion complete interrupt service routine
ISR(ADC_vect) {
  // Read the converted value (10 bits) from ADCL and ADCH registers
  digital_value = ADC;

  // Print the digital value to the Serial Monitor
  Serial.println(digital_value);

  // Start next ADC conversion
  ADCSRA |= (1 << ADSC);
}

void loop() {
  // The loop function is left empty as everything is now handled by the ADC interrupt service routine
}
