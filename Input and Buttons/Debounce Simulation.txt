// Debonce Handling Programmatically
// Option #1 - additional options may be considered.

// Handling the Debounce using "50[ms]" delay.
// Something not very "noticable" but can somewhat prevent debouncing.

// Assuming the Button is not used "intensively"


void setup()
{
  // Define pin 2 as INPUT
  DDRD &= ~0b00000100;
  // Define pin 13 as OUTPUT
  DDRB |= 0b00100000;
}

void loop()
{
  unsigned char result;
  // Extract information about pin 2
  // to find if button is pressed/released
  result = PIND & 0b00000100;
  if (result == 0) // When the button is released
  {
    PORTB &= ~0b00100000; // Turn OFF LED
  	delay(50); // Add delay for debouncing
  }
  else // When the button is pressed
  {
    PORTB |= 0b00100000; // Turn ON LED
    delay(50); // Add delay for debouncing
  }
}